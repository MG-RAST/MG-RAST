use strict;
use warnings;
no warnings qw(redefine);

1;

# this class is AUTOGENERATED and will be AUTOMATICALLY REGENERATED
# all work done in this module will be LOST


package MGRASTMetadata2::MetaDataEntry;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		migs => [ DB_SCALAR, undef, 0, undef ],
		value => [ DB_SCALAR, undef, 1, undef ],
		collection => [ DB_OBJECT, "MGRASTMetadata2::MetaDataCollection", 1, undef ],
		type => [ DB_SCALAR, undef, 0, undef ],
		tag => [ DB_SCALAR, undef, 1, undef ],
		job => [ DB_OBJECT, "MGRAST_jobcache::Job", 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "tag" ],
			[ "value" ],
			[ "collection" ],
			[ "job" ],
		];
}

1;

package MGRASTMetadata2::Curator;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		ID => [ DB_SCALAR, undef, 0, undef ],
		date => [ DB_SCALAR, undef, 0, undef ],
		status => [ DB_SCALAR, undef, 0, undef ],
		name => [ DB_SCALAR, undef, 0, undef ],
		email => [ DB_SCALAR, undef, 0, undef ],
		url => [ DB_SCALAR, undef, 0, undef ],
		user => [ DB_OBJECT, "WebServerBackend::User", 0, undef ],
		type => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "ID" ],
		];
}

sub indices {
     return 
		[
			[ "name" ],
			[ "user" ],
		];
}

1;

package MGRASTMetadata2::UpdateLog;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		comment => [ DB_SCALAR, undef, 0, undef ],
		date => [ DB_SCALAR, undef, 0, undef ],
		collection => [ DB_OBJECT, "MGRASTMetadata2::MetaDataCollection", 1, undef ],
		curator => [ DB_OBJECT, "MGRASTMetadata2::Curator", 1, undef ],
		type => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "curator" ],
			[ "collection" ],
			[ "date" ],
		];
}

1;

package MGRASTMetadata2::Measurement;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		unit => [ DB_SCALAR, undef, 0, undef ],
		value => [ DB_SCALAR, undef, 1, undef ],
		name => [ DB_SCALAR, undef, 0, undef ],
		collection => [ DB_OBJECT, "MGRASTMetadata2::MetaDataCollection", 0, undef ],
		field => [ DB_OBJECT, "MGRASTMetadata2::MetaDataEntry", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "collection" ],
			[ "field" ],
			[ "value" ],
			[ "unit" ],
		];
}

1;

package MGRASTMetadata2::MetaDataCollection;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		source => [ DB_SCALAR, undef, 1, undef ],
		ID => [ DB_SCALAR, undef, 1, undef ],
		creator => [ DB_OBJECT, "MGRASTMetadata2::Curator", 0, undef ],
		entry_date => [ DB_SCALAR, undef, 0, undef ],
		url => [ DB_SCALAR, undef, 1, undef ],
		job => [ DB_OBJECT, "MGRAST_jobcache::Job", 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "ID" ],
		];
}

sub indices {
     return 
		[
			[ "job" ],
			[ "source" ],
			[ "creator" ],
		];
}

1;

package MGRASTMetadata2::ProjectMD;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		project => [ DB_OBJECT, "MGRAST_jobcache::Project", 0, undef ],
		value => [ DB_SCALAR, undef, 1, undef ],
		tag => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "project" ],
		];
}

1;
