<pipeline>
  <stage num='50'>
    <input>This is the original submitted sequence file.</input>
    <description>This is a sequence file in either fasta or fastq format. It may have been edited to change all end-of-line characters into UNIX format.</description>
  </stage>
  <stage num='100'>
    <input>The input sequence data for this step is in the original uploaded sequence data.</input>
    <description>Depending on the options chosen, the preprocessing step filters sequences based on length, number of ambiguous bases and quality values if available.</description>
    <output><file>The FASTA formatted file 100.preprocess.passed.fna contains the sequences which were accepted and will be passed on to the next stage of the analysis pipeline.</file></output>
    <output><file>The FASTA formatted file 100.preprocess.removed.fna contains the sequences which were rejected and will not be passed on to the next stage of the analysis pipeline.</file></output>
  </stage>
  <stage num='150'>
    <input>The input sequence data for this step is in the file 100.preprocess.passed.fna.</input>
    <description>The optional dereplication step removes redundant "technical replicate" sequences from the metagenomic sample. Technical replicates are identified by binning reads with identical first 50 base-pairs. One copy of each 50-base-pair identical bin is retained. </description>
    <output><file>The FASTA formatted file 150.dereplication.passed.fna contains the sequences which were retained and will be passed on to the next stage of the analysis pipeline.</file></output>
    <output><file>The FASTA formatted file 150.dereplication.removed.fna contains the sequences which were rejected and will not be passed on to the next stage of the analysis pipeline.</file></output>
  </stage>
  <stage num='299'>
    <input>The input sequence data for this step is in the file 150.dereplication.passed.fna.</input>
    <output><file>The FASTA formatted file 299.screen.passed.fna contains the sequences which were retained and will be passed on to the next stage of the analysis pipeline.</file></output>
  </stage>
  <stage num='350'>
    <input>The input sequence data for this step is in the file 299.screen.passed.fna.</input>
    <description>Coding regions within the sequences are predicted using FragGeneScan, an ab-initio prokaryotic gene calling algorithm. Using a hidden Markov model for coding regions and non-coding regions, this step identifies the most likely reading frame and translates nucleotide sequences into amino acids sequences. The predicted genes, possibly more than one per fragment, are called features.</description>
    <output><file>The amino acid sequence FASTA formatted file 350.genecalling.coding.faa contains the predicted coding regions.</file></output>
  </stage>
  <stage num='425'>
    <input>The input sequence data for this step is in the file 100.preprocess.passed.fna.</input>
    <description>Sequences are pre-screened using qiime-uclust for at least 70% identity to ribosomal sequences from the following RNA databases (Greengenes, LSU, SSU, and RDP).</description>
    <output><file>The FASTA formatted file 425.search.rna.fna contains the predicted ribosomal sequences.</file></output>
  </stage>
  <stage num='440'>
    <input>The input sequence data for this step is in the file 425.search.rna.fna.</input>
    <description>Sequences are clustered at 97% identity using cd-hit. The clustering process does not remove any sequences but instead makes the similarity search step easier. Following the search, the original reads are loaded into MG-RAST for retrieval on-demand.</description>
    <output><file>The FASTA formatted file 440.cluster.rna97.fna contains sequence clusters that have at least 70% identity to ribosomal sequences and have sequences within 97% identity.</file></output>
    <output>
      <file>The tab-delimited file 440.cluster.rna97.mapping identifies the sequence clusters and the sequences which describe them, each line describes a single cluster.</file>
      <column>Representative sequence ID, including hit location and strand, e.g. 11954908_1_121_+</column>
      <column>List of IDs, including hit location and strand, for other sequences in the cluster, e.g. 11898451_1_119_+,11944918_19_121_+</column>
      <column>List of percentage identities to the representative read sequence, e.g. 97.5%,100.0%</column>
    </output>
  </stage>
  <stage num='450'>
    <input>The input sequence data for this step is in the file 440.cluster.rna97.fna.</input>
    <description>Some of the annotated (.expand) files contain index numbers for md5s and annotations. Mapping files for these numbers can be found &lt;a href='ftp://ftp.metagenomics.anl.gov/data/M5nr/annotations'&gt;here&lt;/a&gt;.</description>
    <output>
      <file>The similarity output from BLAT against the RNA databases (Greengenes, LSU, SSU, and RDP) is the file 450.rna.sims in BLAST m8 format. This includes the identifier for the query which is either the FASTA id or the cluster ID, and the internal identifier for the sequence that it hits.</file>
      <column>Query id (either fasta ID or cluster ID), e.g. 11847922</column>
      <column>Hit id, e.g. 501336051b4d5d412fb84afe8b7fdd87</column>
      <column>percentage identity, e.g. 100.00</column>
      <column>alignment length, e.g. 107</column>
      <column>number of mismatches, e.g. 0</column>
      <column>number of gap openings, e.g. 0</column>
      <column>q.start, e.g. 1</column>
      <column>q.end, e.g. 107</column>
      <column>s.start, e.g. 1262</column>
      <column>s.end, e.g. 1156</column>
      <column>e-value, e.g. 1.7e-54</column>
      <column>score in bits, e.g. 210.0</column>
    </output>
  </stage>
  <stage num='550'>
    <input>The input sequence data for this step is in the file 350.genecalling.coding.faa.</input>
    <description>Protein coding sequences identified with FragGeneScan are clustered at 90% identity with cd-hit. This process does not remove any sequences but instead makes the similarity search step easier. Following the search, the original reads are loaded into MG-RAST for retrieval on-demand.</description>
    <output><file>The amino acid sequence FASTA formatted file 550.cluster.aa90.faa contains the translations of one sequence from each cluster (the representative or seed sequence ID) and all the unclustered (singleton) sequences with the original sequence ID.</file></output>
    <output>
      <file>The tab-delimited file 550.cluster.aa90.mapping identifies the sequence clusters and the sequences which describe them, each line describes a single cluster.</file>
      <column>Protein coding representative sequence ID, including hit location and strand, e.g. 11954908_1_121_+</column>
      <column>List of IDs, including hit location and strand, for other genes in the cluster, e.g. 11898451_1_119_+,11944918_19_121_+</column>
      <column>List of percentage identities to the representative gene sequence, e.g. 97.5%,100.0%</column>
    </output>
  </stage>
  <stage num='650'>
    <input>The input sequence data for this step is in the file 550.cluster.aa90.faa.</input>
    <description>Some of the annotated (.expand) files contain index numbers for md5s and annotations. Mapping files for these numbers can be found &lt;a href='ftp://ftp.metagenomics.anl.gov/data/M5nr/annotations'&gt;here&lt;/a&gt;.</description>
    <output>
      <file>The similarity output from BLAT against the M5NR protein database is the file 650.superblat.sims in BLAST m8 format. This includes the identifier for the query which is either the FASTA id or the cluster ID, and the internal identifier for the sequence that it hits.</file>
      <column>Query id (either fasta ID or cluster ID), e.g. 11847922_1_108_-</column>
      <column>Hit id, e.g. afcfe216e7d39b7c789d6760194b6deb</column>
      <column>percentage identity, e.g. 100.00</column>
      <column>alignment length, e.g. 107</column>
      <column>number of mismatches, e.g. 0</column>
      <column>number of gap openings, e.g. 0</column>
      <column>q.start, e.g. 1</column>
      <column>q.end, e.g. 107</column>
      <column>s.start, e.g. 1262</column>
      <column>s.end, e.g. 1156</column>
      <column>e-value, e.g. 1.7e-54</column>
      <column>score in bits, e.g. 210.0</column>
    </output>
  </stage>
</pipeline>
