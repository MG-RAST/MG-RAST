use strict;
use warnings;
no warnings qw(redefine);

1;

# this class is AUTOGENERATED and will be AUTOMATICALLY REGENERATED
# all work done in this module will be LOST


package JobDB::PipelineStage;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		stage => [ DB_SCALAR, undef, 0, undef ],
		timestamp => [ DB_SCALAR, undef, 0, undef ],
		options => [ DB_SCALAR, undef, 0, undef ],
		version => [ DB_SCALAR, undef, 0, undef ],
		status => [ DB_SCALAR, undef, 0, undef ],
		position => [ DB_SCALAR, undef, 0, undef ],
		display_name => [ DB_SCALAR, undef, 0, undef ],
		job => [ DB_OBJECT, "JobDB::Job", 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "job", "stage" ],
		];
}

sub indices {
     return 
		[
			[ "status" ],
		];
}

1;

package JobDB::JobInfo;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		avg_len => [ DB_SCALAR, undef, 0, undef ],
		bp_count => [ DB_SCALAR, undef, 0, undef ],
		sequence_type => [ DB_SCALAR, undef, 0, undef ],
		feature => [ DB_SCALAR, undef, 0, undef ],
		timestamp => [ DB_SCALAR, undef, 0, undef ],
		latitude => [ DB_SCALAR, undef, 0, undef ],
		biome => [ DB_SCALAR, undef, 0, undef ],
		sequence_tech => [ DB_SCALAR, undef, 0, undef ],
		project_name => [ DB_SCALAR, undef, 0, undef ],
		country => [ DB_SCALAR, undef, 0, undef ],
		longitude => [ DB_SCALAR, undef, 0, undef ],
		location => [ DB_SCALAR, undef, 0, undef ],
		seq_count => [ DB_SCALAR, undef, 0, undef ],
		job => [ DB_OBJECT, "JobDB::Job", 0, undef ],
		alpha_diverse => [ DB_SCALAR, undef, 0, undef ],
		env_package => [ DB_SCALAR, undef, 0, undef ],
		drisee => [ DB_SCALAR, undef, 0, undef ],
		project_pi => [ DB_SCALAR, undef, 0, undef ],
		material => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "job" ],
		];
}

sub indices {
     return 
		[
		];
}

1;

package JobDB::JobStatistics;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		timestamp => [ DB_SCALAR, undef, 0, undef ],
		value => [ DB_SCALAR, undef, 0, undef ],
		tag => [ DB_SCALAR, undef, 0, undef ],
		job => [ DB_OBJECT, "JobDB::Job", 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "job", "tag" ],
		];
}

sub indices {
     return 
		[
		];
}

1;

package JobDB::MetaDataTemplate;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		category_type => [ DB_SCALAR, undef, 0, undef ],
		mgrast_tag => [ DB_SCALAR, undef, 0, undef ],
		fw_type => [ DB_SCALAR, undef, 0, undef ],
		definition => [ DB_SCALAR, undef, 1, undef ],
		unit => [ DB_SCALAR, undef, 0, undef ],
		required => [ DB_SCALAR, undef, 1, undef ],
		qiime_tag => [ DB_SCALAR, undef, 0, undef ],
		type => [ DB_SCALAR, undef, 1, undef ],
		category => [ DB_SCALAR, undef, 1, undef ],
		tag => [ DB_SCALAR, undef, 1, undef ],
		mixs => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "category", "tag" ],
		];
}

sub indices {
     return 
		[
			[ "required" ],
		];
}

1;

package JobDB::MetaDataEntry;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		required => [ DB_SCALAR, undef, 0, undef ],
		value => [ DB_SCALAR, undef, 1, undef ],
		collection => [ DB_OBJECT, "JobDB::MetaDataCollection", 1, undef ],
		tag => [ DB_SCALAR, undef, 1, undef ],
		mixs => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "tag" ],
			[ "value" ],
			[ "collection" ],
		];
}

1;

package JobDB::JobgroupJob;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		jobgroup => [ DB_OBJECT, "JobDB::Jobgroup", 1, undef ],
		job => [ DB_OBJECT, "JobDB::Job", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
		];
}

1;

package JobDB::MetaDataCollection;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		source => [ DB_SCALAR, undef, 1, undef ],
		ID => [ DB_SCALAR, undef, 1, undef ],
		parent => [ DB_OBJECT, "JobDB::MetaDataCollection", 0, undef ],
		creator => [ DB_OBJECT, "JobDB::Curator", 0, undef ],
		entry_date => [ DB_SCALAR, undef, 0, undef ],
		url => [ DB_SCALAR, undef, 0, undef ],
		name => [ DB_SCALAR, undef, 0, undef ],
		type => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "ID" ],
		];
}

sub indices {
     return 
		[
			[ "source" ],
			[ "creator" ],
			[ "type" ],
		];
}

1;

package JobDB::Job;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		file_checksum_raw => [ DB_SCALAR, undef, 0, undef ],
		options => [ DB_SCALAR, undef, 0, undef ],
		server_version => [ DB_SCALAR, undef, 0, undef ],
		file => [ DB_SCALAR, undef, 0, undef ],
		library => [ DB_OBJECT, "JobDB::MetaDataCollection", 0, undef ],
		sequence_type => [ DB_SCALAR, undef, 0, undef ],
		created_on => [ DB_SCALAR, undef, 0, undef ],
		primary_project => [ DB_OBJECT, "JobDB::Project", 0, undef ],
		public => [ DB_SCALAR, undef, 0, undef ],
		sample => [ DB_OBJECT, "JobDB::MetaDataCollection", 0, undef ],
		file_size_raw => [ DB_SCALAR, undef, 0, undef ],
		viewable => [ DB_SCALAR, undef, 0, undef ],
		owner => [ DB_OBJECT, "WebServerBackend::User", 0, undef ],
		job_id => [ DB_SCALAR, undef, 1, undef ],
		current_stage => [ DB_SCALAR, undef, 0, undef ],
		name => [ DB_SCALAR, undef, 0, undef ],
		metagenome_id => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "job_id" ],
			[ "metagenome_id" ],
		];
}

sub indices {
     return 
		[
			[ "owner" ],
			[ "viewable" ],
			[ "public" ],
		];
}

1;

package JobDB::ProjectJob;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		project => [ DB_OBJECT, "JobDB::Project", 1, undef ],
		job => [ DB_OBJECT, "JobDB::Job", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "job" ],
			[ "project" ],
		];
}

1;

package JobDB::ProjectCollection;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		project => [ DB_OBJECT, "JobDB::Project", 1, undef ],
		collection => [ DB_OBJECT, "JobDB::MetaDataCollection", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "collection" ],
			[ "project" ],
		];
}

1;

package JobDB::UpdateLog;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		comment => [ DB_SCALAR, undef, 0, undef ],
		date => [ DB_SCALAR, undef, 0, undef ],
		collection => [ DB_OBJECT, "JobDB::MetaDataCollection", 1, undef ],
		curator => [ DB_OBJECT, "JobDB::Curator", 1, undef ],
		type => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "curator" ],
			[ "collection" ],
			[ "date" ],
		];
}

1;

package JobDB::UploadStatus;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		partitioned => [ DB_SCALAR, undef, 0, undef ],
		filename => [ DB_SCALAR, undef, 0, undef ],
		status => [ DB_SCALAR, undef, 0, undef ],
		upload_directory => [ DB_SCALAR, undef, 0, undef ],
		user_directory => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "user_directory" ],
			[ "status" ],
		];
}

1;

package JobDB::ProjectMD;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		project => [ DB_OBJECT, "JobDB::Project", 0, undef ],
		value => [ DB_SCALAR, undef, 1, undef ],
		tag => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "project" ],
			[ "tag" ],
		];
}

1;

package JobDB::JobAttributes;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		timestamp => [ DB_SCALAR, undef, 0, undef ],
		value => [ DB_SCALAR, undef, 0, undef ],
		tag => [ DB_SCALAR, undef, 0, undef ],
		job => [ DB_OBJECT, "JobDB::Job", 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "job", "tag" ],
		];
}

sub indices {
     return 
		[
		];
}

1;

package JobDB::Jobgroup;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		name => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
		];
}

1;

package JobDB::Curator;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		ID => [ DB_SCALAR, undef, 0, undef ],
		date => [ DB_SCALAR, undef, 0, undef ],
		status => [ DB_SCALAR, undef, 0, undef ],
		name => [ DB_SCALAR, undef, 0, undef ],
		email => [ DB_SCALAR, undef, 0, undef ],
		url => [ DB_SCALAR, undef, 0, undef ],
		user => [ DB_OBJECT, "WebServerBackend::User", 0, undef ],
		type => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "ID" ],
		];
}

sub indices {
     return 
		[
			[ "name" ],
			[ "user" ],
		];
}

1;

package JobDB::MetaDataCV;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		value => [ DB_SCALAR, undef, 0, undef ],
		tag => [ DB_SCALAR, undef, 1, undef ],
		type => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "type", "tag" ],
		];
}

sub indices {
     return 
		[
		];
}

1;

package JobDB::Project;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		creator => [ DB_OBJECT, "JobDB::Curator", 0, undef ],
		public => [ DB_SCALAR, undef, 0, undef ],
		name => [ DB_SCALAR, undef, 1, undef ],
		type => [ DB_SCALAR, undef, 0, undef ],
		id => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "id" ],
			[ "name" ],
		];
}

sub indices {
     return 
		[
			[ "public" ],
			[ "type" ],
		];
}

1;

package JobDB::Measurement;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		unit => [ DB_SCALAR, undef, 0, undef ],
		value => [ DB_SCALAR, undef, 1, undef ],
		name => [ DB_SCALAR, undef, 0, undef ],
		collection => [ DB_OBJECT, "JobDB::MetaDataCollection", 0, undef ],
		field => [ DB_OBJECT, "JobDB::MetaDataEntry", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "collection" ],
			[ "field" ],
			[ "value" ],
			[ "unit" ],
		];
}

1;
